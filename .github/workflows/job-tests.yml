on:
  # Allows to call this job from another pipeline
  workflow_call:

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

name: Testing pipeline
jobs:
  tests:
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup java version
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Get seconds since epoch into an env variable
        run: echo "SECONDS_SINCE_EPOCH=$(date +%s)" >> $GITHUB_ENV

      - name: Remove slash from branch
        run: echo "BRANCH_NO_SLASH=$(basename ${{ env.BRANCH_NAME }})" >> $GITHUB_ENV

      - name: build
        run: java --version && echo $JAVA_HOME && ./gradlew build -x test -Pversion=${{ env.BRANCH_NO_SLASH }}-${{ env.SECONDS_SINCE_EPOCH }}-${{github.run_number}}

      - name: tests
        run: ./gradlew test

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: JUnit Test Results
          path: |
            **/build/test-results/

      - name: Publish Test Results
        id: test-results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: '**/test-results/**/*.xml'

      - name: Set badge color
        shell: bash
        run: |
          case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
            success)
              echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
              ;;
            failure)
              echo "BADGE_COLOR=800000" >> $GITHUB_ENV
              ;;
            neutral)
              echo "BADGE_COLOR=696969" >> $GITHUB_ENV
              ;;
          esac

      - name: Create badge
        uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
        with:
          label: Tests
          status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
          color: ${{ env.BADGE_COLOR }}
          path: badge.svg

      - name: Upload badge to Gist
        # Upload only for main branch
        if: >
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main' ||
          github.event_name != 'workflow_run' && github.ref == 'refs/heads/main'
        uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
        with:
          token: ${{ secrets.GIST_SAVER_TOKEN }}
          gistURL: https://gist.githubusercontent.com/${{github.actor}}/419918a15fff1a5ec74126888f73d4ae
          file: badge.svg
