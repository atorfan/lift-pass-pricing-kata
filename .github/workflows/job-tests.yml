on:
  # Allows to call this job from another pipeline
  workflow_call:

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

name: Testing pipeline
jobs:
  tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup java version
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Get seconds since epoch into an env variable
        run: echo "SECONDS_SINCE_EPOCH=$(date +%s)" >> $GITHUB_ENV

      - name: Remove slash from branch
        run: echo "BRANCH_NO_SLASH=$(basename ${{ env.BRANCH_NAME }})" >> $GITHUB_ENV

      - name: build
        run: java --version && echo $JAVA_HOME && ./gradlew build -x test -Pversion=${{ env.BRANCH_NO_SLASH }}-${{ env.SECONDS_SINCE_EPOCH }}-${{github.run_number}}

      - name: tests
        run: ./gradlew test

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: JUnit Test Results
          path: |
            **/build/test-results/

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: '**/test-results/**/*.xml'

#      - name: Set badge color
#        shell: bash
#        run: |
#          case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
#            success)
#              echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
#              ;;
#            failure)
#              echo "BADGE_COLOR=800000" >> $GITHUB_ENV
#              ;;
#            neutral)
#              echo "BADGE_COLOR=696969" >> $GITHUB_ENV
#              ;;
#          esac
#
#      - name: Create badge
#        uses: emibcn/badge-action@808173dd03e2f30c980d03ee49e181626088eee8
#        with:
#          label: Tests
#          status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
#          color: ${{ env.BADGE_COLOR }}
#          path: badge.svg
#
#      - name: Upload badge to Gist
#        # Upload only for master branch
#        if: >
#          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'master' ||
#          github.event_name != 'workflow_run' && github.ref == 'refs/heads/master'
#        uses: andymckay/append-gist-action@6e8d64427fe47cbacf4ab6b890411f1d67c07f3e
#        with:
#          token: ${{ secrets.GIST_TOKEN }}
#          gistURL: https://gist.githubusercontent.com/{user}/{id}
#          file: badge.svg
