on:
  # Allows to call this job from another pipeline
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      test-results:
        value: ${{ jobs.tests.outputs.test-results }}

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

name: Testing pipeline
jobs:
  tests:
    runs-on: ubuntu-latest
    permissions:
      checks: write
    outputs:
      test-results: ${{ steps.test-results.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup java version
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Get seconds since epoch into an env variable
        run: echo "SECONDS_SINCE_EPOCH=$(date +%s)" >> $GITHUB_ENV

      - name: Remove slash from branch
        run: echo "BRANCH_NO_SLASH=$(basename ${{ env.BRANCH_NAME }})" >> $GITHUB_ENV

      - name: build
        run: java --version && echo $JAVA_HOME && ./gradlew build -x test -Pversion=${{ env.BRANCH_NO_SLASH }}-${{ env.SECONDS_SINCE_EPOCH }}-${{github.run_number}}

      - name: tests
        run: ./gradlew test

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: JUnit Test Results
          path: |
            **/build/test-results/

      - name: Publish Test Results
        id: publish-test-results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: '**/test-results/**/*.xml'

      - name: Output test results
        id: test-results
        run: |
          echo with comma "${{ steps.publish-test-results.outputs.json }}"
          echo without comma ${{ steps.publish-test-results.outputs.json }}
          echo 'content=${{ steps.publish-test-results.outputs.json }}' >> $GITHUB_OUTPUT
